(No subject)
Firas Ahmed<firasahmed2005@gmail.com>
​
Firasayyad@outlook.com
​
#include <stdio.h>
//global page replacment

int simulateGlobalPageReplacement(int *pageRefs1, int *pageRefs2, int length, int numFrames) {
    int frames[numFrames];
    for (int i = 0; i < numFrames; i++) frames[i] = -1; // Initialize frames to -1 (empty)

    int pageFaults = 0;
    int index = 0; // Pointer to keep track of the next frame to evict
   
    // Simulate global page replacement for both processes
    for (int i = 0; i < length; i++) {
        int page = (i % 2 == 0) ? pageRefs1[i / 2] : pageRefs2[i / 2]; // Alternate between two processes
        int found = 0;
       
        // Check if the page is already in one of the frames
        for (int j = 0; j < numFrames; j++) {
            if (frames[j] == page) {
                found = 1;
                break;
            }
        }

        if (!found) {  // Page fault occurred
            pageFaults++;
            frames[index] = page;  // Replace the page
            index = (index + 1) % numFrames;  // Move to the next frame
        }
    }
    return pageFaults;
}

int main() {
    int pageRefs1[] = {0, 1, 2, 3, 0, 1, 4, 0, 1, 2};  // Example page reference string for process 1
    int pageRefs2[] = {1, 2, 3, 0, 1, 2, 4, 0, 1, 3};  // Example page reference string for process 2
    int length = sizeof(pageRefs1) / sizeof(pageRefs1[0]);

    int pageFaults = simulateGlobalPageReplacement(pageRefs1, pageRefs2, length, 5);  // 5 frames
    printf("Global Page Faults: %d\n", pageFaults);

    return 0;
}